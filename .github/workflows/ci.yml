name: Proposal App CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch: # Allow manual triggering

jobs:
  frontend-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run component tests
        run: npm test -- --testPathPattern='components'

      - name: Run hook tests
        run: npm test -- --testPathPattern='hooks'

      - name: Run other tests
        run: npm test -- --testPathIgnorePatterns='components|hooks'

      - name: Build project
        run: npm run build

  solidity-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install Hardhat and dependencies
        run: |
          npm install --save-dev hardhat @nomicfoundation/hardhat-toolbox @nomicfoundation/hardhat-verify

      - name: Compile Solidity contracts
        run: npx hardhat compile

      - name: Run Solidity tests
        run: npx hardhat test

      - name: Run Solidity coverage
        run: npx hardhat coverage

  deploy:
    needs: [frontend-test, solidity-test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      # Uncomment below sections as needed for your deployment

      # - name: Deploy to Vercel
      #   uses: amondnet/vercel-action@v20
      #   with:
      #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
      #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
      #     vercel-args: '--prod'

      # - name: Deploy contracts to testnet
      #   run: npx hardhat run scripts/deploy.js --network sepolia
      #   env:
      #     PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
      #     ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
